     1                                 %line 1+1 ast11.asm
     2                                 
     3                                 
     4                                 
     5                                 
     6                                 
     7                                 
     8                                 
     9                                 
    10                                 
    11                                 
    12                                 
    13                                 
    14                                 
    15                                 
    16                                 
    17                                 
    18                                 
    19                                 
    20                                 
    21                                 
    22                                 [section .data]
    23                                 
    24                                 
    25                                 
    26                                 
    27                                 LF equ 10
    28                                 NULL equ 0
    29                                 SPACE equ 0x20
    30                                 
    31                                 TRUE equ 1
    32                                 FALSE equ 0
    33                                 
    34                                 EXIT_SUCCESS equ 0
    35                                 EXIT_NOSUCCESS equ 1
    36                                 
    37                                 STDIN equ 0
    38                                 STDOUT equ 1
    39                                 STDERR equ 2
    40                                 
    41                                 SYS_read equ 0
    42                                 SYS_write equ 1
    43                                 SYS_open equ 2
    44                                 SYS_close equ 3
    45                                 SYS_fork equ 57
    46                                 SYS_exit equ 60
    47                                 SYS_creat equ 85
    48                                 SYS_time equ 201
    49                                 
    50                                 O_CREAT equ 0x40
    51                                 O_TRUNC equ 0x200
    52                                 O_APPEND equ 0x400
    53                                 
    54                                 O_RDONLY equ 000000
    55                                 O_WRONLY equ 000001
    56                                 O_RDWR equ 000002
    57                                 
    58                                 S_IRUSR equ 00400
    59                                 S_IWUSR equ 00200
    60                                 S_IXUSR equ 00100
    61                                 
    62                                 
    63                                 
    64                                 
    65 00000000 55736167653A202E2F-    usageMsg db "Usage: ./benford -i <inputFileName> "
    66 00000000 62656E666F7264202D-
    67 00000000 69203C696E70757446-
    68 00000000 696C654E616D653E20 
    69 00000024 2D6F203C6F75747075-     db "-o <outputFileName> -d <T/F>", LF, NULL
    70 00000024 7446696C654E616D65-
    71 00000024 3E202D64203C542F46-
    72 00000024 3E0A00             
    73                                 
    74 00000042 4572726F722C20746F-    errMany db "Error, too many characters on the "
    75 00000042 6F206D616E79206368-
    76 00000042 617261637465727320-
    77 00000042 6F6E2074686520     
    78 00000064 636F6D6D616E64206C-     db "command line.", LF, NULL
    79 00000064 696E652E0A00       
    80                                 
    81 00000073 4572726F722C20746F-    errFew db "Error, too few characters on the "
    82 00000073 6F2066657720636861-
    83 00000073 72616374657273206F-
    84 00000073 6E2074686520       
    85 00000094 636F6D6D616E64206C-     db "command line.", LF, NULL
    86 00000094 696E652E0A00       
    87                                 
    88 000000A3 4572726F722C20696E-    errDSpec db "Error, invalid output display specifier."
    89 000000A3 76616C6964206F7574-
    90 000000A3 70757420646973706C-
    91 000000A3 617920737065636966-
    92 000000A3 6965722E           
    93 000000CB 0A00                    db LF, NULL
    94                                 
    95 000000CD 4572726F722C20696E-    errISpec db "Error, invalid input file specifier."
    96 000000CD 76616C696420696E70-
    97 000000CD 75742066696C652073-
    98 000000CD 70656369666965722E 
    99 000000F1 0A00                    db LF, NULL
   100                                 
   101 000000F3 4572726F722C20696E-    errOSpec db "Error, invalid output file specifier."
   102 000000F3 76616C6964206F7574-
   103 000000F3 7075742066696C6520-
   104 000000F3 737065636966696572-
   105 000000F3 2E                 
   106 00000118 0A00                    db LF, NULL
   107                                 
   108 0000011A 4572726F722C20696E-    errTF db "Error, invalid display option. Must be T or F."
   109 0000011A 76616C696420646973-
   110 0000011A 706C6179206F707469-
   111 0000011A 6F6E2E204D75737420-
   112 0000011A 62652054206F722046-
   113 0000011A 2E                 
   114 00000148 0A00                    db LF, NULL
   115                                 
   116 0000014A 4572726F722C206361-    errOpenIn db "Error, can not open input file."
   117 0000014A 6E206E6F74206F7065-
   118 0000014A 6E20696E7075742066-
   119 0000014A 696C652E           
   120 00000169 0A00                    db LF, NULL
   121                                 
   122 0000016B 4572726F722C206361-    errOpenOut db "Error, can not open output file."
   123 0000016B 6E206E6F74206F7065-
   124 0000016B 6E206F757470757420-
   125 0000016B 66696C652E         
   126 0000018B 0A00                    db LF, NULL
   127                                 
   128 0000018D 0000000000000000       rdFileDescriptor dq 0
   129 00000195 0000000000000000       wrFileDescriptor dq 0
   130                                 
   131                                 
   132                                 
   133                                 
   134                                 BUFFSIZE equ 500000
   135                                 
   136                                 SKIP_LINES equ 5
   137                                 SKIP_CHARS equ 6
   138                                 
   139 0000019D 01                     nextCharIsFirst db TRUE
   140 0000019E 00000000               skipLineCount dd 0
   141 000001A2 00000000               skipCharCount dd 0
   142 000001A6 00                     gotDigit db FALSE
   143 000001A7 00                     fDigit db 0
   144 000001A8 00                     chr db 0
   145                                 
   146                                 
   147 000001A9 20A1070000000000       bfMax dq BUFFSIZE
   148 000001B1 20A1070000000000       curr dq BUFFSIZE
   149                                 
   150 000001B9 00                     wasEOF db FALSE
   151                                 
   152 000001BA 4572726F7220726561-    errFileRead db "Error reading input file."
   153 000001BA 64696E6720696E7075-
   154 000001BA 742066696C652E     
   155 000001D3 50726F6772616D2074-     db "Program terminated."
   156 000001D3 65726D696E61746564-
   157 000001D3 2E                 
   158 000001E6 0A00                    db LF, NULL
   159                                 
   160                                 
   161                                 
   162                                 
   163                                 SCALE1 equ 100
   164                                 SCALE2 equ 1000
   165                                 SCALE3 equ 2500
   166                                 SCALE4 equ 5000
   167                                 
   168 000001E8 64000000               scale dd SCALE1
   169 000001EC 0000000000000000       totalCnt dq 0
   170                                 
   171 000001F4 03000000               weight dd 3
   172                                 
   173 000001F8 4572726F7220777269-    errFileWrite db "Error writting output file."
   174 000001F8 7474696E67206F7574-
   175 000001F8 7075742066696C652E 
   176 00000213 0A00                    db LF, NULL
   177                                 
   178 00000215 0A4353203231382042-    graphHeader db LF, "CS 218 Benfords Law", LF
   179 00000215 656E666F726473204C-
   180 00000215 61770A             
   181 0000022A 546573742052657375-     db "Test Results", LF, LF, NULL
   182 0000022A 6C74730A0A00       
   183                                 
   184 00000239 546F74616C20446174-    graphLine1 db "Total Data Points: "
   185 00000239 6120506F696E74733A-
   186 00000239 20                 
   187 0000024C 202020202020202020-    tStr1 db "                     ", LF, LF, NULL
   188 0000024C 202020202020202020-
   189 0000024C 2020200A0A00       
   190                                 
   191                                 DIGITS_SIZE equ 15
   192                                 STARS_SIZE equ 50
   193                                 
   194 00000264 2020                   graphLine2 db "  "
   195 00000266 78                     index2 db "x"
   196 00000267 2020                    db "  "
   197 00000269 202020202020202020-    num2 db "               "
   198 00000269 202020202020       
   199 00000278 7C                      db "|"
   200 00000279 202020202020202020-    stars2 db "                              "
   201 00000279 202020202020202020-
   202 00000279 202020202020202020-
   203 00000279 202020             
   204 00000297 202020202020202020-     db "                    "
   205 00000297 202020202020202020-
   206 00000297 2020               
   207 000002AB 0A00                    db LF, NULL
   208                                 
   209 000002AD 202020202020202020-    graphLine3 db "                     ---------------------------------------------"
   210 000002AD 202020202020202020-
   211 000002AD 2020202D2D2D2D2D2D-
   212 000002AD 2D2D2D2D2D2D2D2D2D-
   213 000002AD 2D2D2D2D2D2D2D2D2D-
   214 000002AD 2D2D2D2D2D2D2D2D2D-
   215 000002AD 2D2D2D2D2D2D2D2D2D-
   216 000002AD 2D2D2D             
   217 000002EF 0A0A00                  db LF, LF, NULL
   218                                 
   219 000002F2 577269746520446F6E-    writeDone db "Write Done", NULL
   220 000002F2 6500               
   221                                 
   222                                 
   223                                 
   224                                 [section .bss]
   225                                 
   226 00000000 <gap>                  buff resb BUFFSIZE+1
   227                                 
   228                                 
   229                                 
   230                                 
   231                                 [section .text]
   232                                 
   233                                 
   234                                 
   235                                 
   236                                 
   237                                 
   238                                 
   239                                 
   240                                 
   241                                 
   242                                 
   243                                 
   244                                 
   245                                 
   246                                 
   247                                 
   248                                 
   249                                 
   250                                 
   251                                 
   252                                 
   253                                 
   254                                 
   255                                 
   256                                 
   257                                 
   258                                 [global getArguments]
   259                                 getArguments:
   260                                 
   261 00000000 53                      push rbx
   262 00000001 4154                    push r12
   263 00000003 4155                    push r13
   264 00000005 4156                    push r14
   265                                 
   266 00000007 4989F4                  mov r12, rsi
   267 0000000A 4989D5                  mov r13, rdx
   268 0000000D 4989CE                  mov r14, rcx
   269                                 
   270                                 
   271 00000010 4883FF01                cmp rdi, 1
   272 00000014 0F84C6000000            je usage
   273                                 
   274                                 
   275 0000001A 4883FF07                cmp rdi, 7
   276 0000001E 0F8FD4000000            jg many
   277                                 
   278                                 
   279 00000024 4883FF07                cmp rdi, 7
   280 00000028 0F8CE2000000            jl few
   281                                 
   282                                 
   283 0000002E 498B5C2408              mov rbx, qword[r12+8]
   284 00000033 66813B2D69              cmp word[rbx], 0x692d
   285 00000038 0F85EA000000            jne invalidInputSpecifier
   286                                 
   287                                 
   288 0000003E 48C7C002000000          mov rax, SYS_open
   289 00000045 498B7C2410              mov rdi, qword[r12+16]
   290 0000004A 48C7C600000000          mov rsi, O_RDONLY
   291 00000051 0F05                    syscall
   292                                 
   293 00000053 4883F800                cmp rax, 0
   294 00000057 0F8CE3000000            jl errorOnInputFile
   295                                 
   296 0000005D 49894500                mov qword[r13], rax
   297 00000061 48890425[00000000]      mov qword[rdFileDescriptor], rax
   298                                 
   299                                 
   300 00000069 498B5C2418              mov rbx, qword[r12+24]
   301 0000006E 66813B2D6F              cmp word[rbx], 0x6f2d
   302 00000073 0F85DF000000            jne invalidOutputSpecifier
   303                                 
   304                                 
   305 00000079 48C7C055000000          mov rax, SYS_creat
   306 00000080 498B7C2420              mov rdi, qword[r12+32]
   307 00000085 48C7C680010000          mov rsi, S_IRUSR | S_IWUSR
   308 0000008C 0F05                    syscall
   309                                 
   310 0000008E 4883F800                cmp rax, 0
   311 00000092 0F8CD5000000            jl errorOnOutputFile
   312                                 
   313 00000098 498906                  mov qword[r14], rax
   314                                 
   315 0000009B 48C7C002000000          mov rax, SYS_open
   316 000000A2 498B7C2420              mov rdi, qword[r12+32]
   317 000000A7 48C7C600000000          mov rsi, O_RDONLY
   318 000000AE 0F05                    syscall
   319                                 
   320 000000B0 4883F800                cmp rax, 0
   321 000000B4 0F8CB3000000            jl errorOnOutputFile
   322                                 
   323                                 
   324 000000BA 498B5C2428              mov rbx, qword[r12+40]
   325 000000BF 66813B2D64              cmp word[rbx], 0x642d
   326 000000C4 0F85B8000000            jne invalidDisplaySpecifier
   327                                 
   328                                 
   329 000000CA 498B5C2430              mov rbx, qword[r12+48]
   330                                 
   331                                 
   332 000000CF 803B54                  cmp byte[rbx], 0x54
   333 000000D2 0F84BF000000            je displayTrue
   334                                 
   335 000000D8 803B46                  cmp byte[rbx], 0x46
   336 000000DB 0F84D2000000            je displayFalse
   337                                 
   338                                 
   339                                 
   340 000000E1 E9DE000000              jmp invalidDisplayOption
   341                                 
   342                                 
   343                                  usage:
   344 000000E6 48C7C7[00000000]        mov rdi, usageMsg
   345 000000ED E8A2030000              call printString
   346 000000F2 48C7C000000000          mov rax, FALSE
   347 000000F9 E9DB000000              jmp argsDone
   348                                 
   349                                  many:
   350 000000FE 48C7C7[00000000]        mov rdi, errMany
   351 00000105 E88A030000              call printString
   352 0000010A 48C7C000000000          mov rax, FALSE
   353 00000111 E9C3000000              jmp argsDone
   354                                 
   355                                  few:
   356 00000116 48C7C7[00000000]        mov rdi, errFew
   357 0000011D E872030000              call printString
   358 00000122 48C7C000000000          mov rax, FALSE
   359 00000129 E9AB000000              jmp argsDone
   360                                 
   361                                  invalidInputSpecifier:
   362 0000012E 48C7C7[00000000]        mov rdi, errISpec
   363 00000135 E85A030000              call printString
   364 0000013A 48C7C000000000          mov rax, FALSE
   365 00000141 E993000000              jmp argsDone
   366                                 
   367                                  errorOnInputFile:
   368 00000146 48C7C7[00000000]        mov rdi, errOpenIn
   369 0000014D E842030000              call printString
   370 00000152 48C7C000000000          mov rax, FALSE
   371 00000159 E97B000000              jmp argsDone
   372                                 
   373                                  invalidOutputSpecifier:
   374 0000015E 48C7C7[00000000]        mov rdi, errOSpec
   375 00000165 E82A030000              call printString
   376 0000016A 48C7C000000000          mov rax, FALSE
   377 00000171 EB69                    jmp argsDone
   378                                 
   379                                  errorOnOutputFile:
   380 00000173 48C7C7[00000000]        mov rdi, errOpenOut
   381 0000017A E815030000              call printString
   382 0000017F 48C7C000000000          mov rax, FALSE
   383 00000186 EB54                    jmp argsDone
   384                                 
   385                                  invalidDisplaySpecifier:
   386 00000188 48C7C7[00000000]        mov rdi, errDSpec
   387 0000018F E800030000              call printString
   388 00000194 48C7C000000000          mov rax, FALSE
   389 0000019B EB3F                    jmp argsDone
   390                                 
   391                                  displayTrue:
   392 0000019D 49C70001000000          mov qword[r8], TRUE
   393 000001A4 48C7C001000000          mov rax, TRUE
   394 000001AB 488B1C25[00000000]      mov rbx, qword[rdFileDescriptor]
   395 000001B3 49895D00                mov qword[r13], rbx
   396 000001B7 EB23                    jmp argsDone
   397                                 
   398                                  displayFalse:
   399 000001B9 49C70000000000          mov qword[r8], FALSE
   400 000001C0 48C7C001000000          mov rax, TRUE
   401 000001C7 EB13                    jmp argsDone
   402                                 
   403                                  invalidDisplayOption:
   404 000001C9 48C7C7[00000000]        mov rdi, errTF
   405 000001D0 E8BF020000              call printString
   406 000001D5 48C7C000000000          mov rax, FALSE
   407 000001DC EBFE                    jmp argsDone
   408                                 
   409                                  argsDone:
   410                                 
   411 000001DE 415E                    pop r14
   412 000001E0 415D                    pop r13
   413 000001E2 415C                    pop r12
   414 000001E4 5B                      pop rbx
   415 000001E5 C3                     ret
   416                                 
   417                                 
   418                                 
   419                                 
   420                                 
   421                                 
   422                                 
   423                                 
   424                                 
   425                                 
   426                                 
   427                                 
   428                                 
   429                                 
   430                                 
   431                                 
   432                                 
   433                                 
   434                                 
   435                                 
   436                                 
   437                                 
   438                                 
   439                                 
   440                                 
   441                                 
   442                                 
   443                                 [global int2octal]
   444                                 int2octal:
   445                                 
   446 000001E6 4154                    push r12
   447 000001E8 4155                    push r13
   448                                 
   449 000001EA 49C7C408000000          mov r12, 8
   450 000001F1 48C7C100000000          mov rcx, 0
   451 000001F8 4989F5                  mov r13, rsi
   452                                 
   453                                 
   454 000001FB 4889F8                  mov rax, rdi
   455                                 
   456                                  convertLp:
   457 000001FE 48C7C200000000          mov rdx, 0
   458 00000205 49F7F4                  div r12
   459                                 
   460 00000208 52                      push rdx
   461 00000209 48FFC1                  inc rcx
   462                                 
   463                                 
   464 0000020C 4883F800                cmp rax, 0
   465 00000210 7400                    je cvtPushDone
   466                                 
   467 00000212 EBE8                    jmp convertLp
   468                                 
   469                                  cvtPushDone:
   470                                 
   471                                 
   472 00000214 48C7C200000000          mov rdx, 0
   473                                  popLp:
   474                                 
   475 0000021B 415C                    pop r12
   476 0000021D 48FFC9                  dec rcx
   477 00000220 4983C430                add r12, "0"
   478 00000224 4588641500              mov byte[r13+rdx], r12b
   479                                 
   480 00000229 48FFC2                  inc rdx
   481                                 
   482 0000022C 4883F900                cmp rcx, 0
   483 00000230 7400                    je convertDone
   484 00000232 EBE5                    jmp popLp
   485                                 
   486                                  convertDone:
   487                                 
   488 00000234 41C644150000            mov byte[r13+rdx], NULL
   489 0000023A 48C7C001000000          mov rax, TRUE
   490                                 
   491 00000241 415D                    pop r13
   492 00000243 415C                    pop r12
   493                                 
   494 00000245 C3                     ret
   495                                 
   496                                 
   497                                 
   498                                 
   499                                 
   500                                 
   501                                 
   502                                 
   503                                 
   504                                 
   505                                 
   506                                 
   507                                 
   508                                 
   509                                 
   510                                 
   511                                 
   512                                 
   513                                 
   514                                 
   515                                 
   516                                 
   517                                 [global countDigits]
   518                                 countDigits:
   519                                 
   520 00000246 4154                    push r12
   521 00000248 4155                    push r13
   522                                 
   523 0000024A 4989FC                  mov r12, rdi
   524 0000024D 4989F5                  mov r13, rsi
   525                                 
   526                                  mainLp:
   527                                 
   528 00000250 488B3C25[00000000]      mov rdi, qword[curr]
   529 00000258 488B3425[00000000]      mov rsi, qword[bfMax]
   530                                 
   531 00000260 4839F7                  cmp rdi, rsi
   532 00000263 7C5D                    jl endMainLp
   533                                 
   534 00000265 803C25[00000000]01      cmp byte[wasEOF], TRUE
   535 0000026D 0F8446010000            je exitCount
   536                                 
   537                                 
   538                                 
   539 00000273 48C7C000000000          mov rax, SYS_read
   540 0000027A 4C89E7                  mov rdi, r12
   541 0000027D 48C7C6[00000000]        mov rsi, buff
   542 00000284 48C7C220A10700          mov rdx, BUFFSIZE
   543 0000028B 0F05                    syscall
   544                                 
   545                                 
   546                                 
   547 0000028D 4883F800                cmp rax, 0
   548 00000291 0F8C14010000            jl errOnRead
   549                                 
   550                                 
   551 00000297 83F800                  cmp eax, 0
   552 0000029A 0F8419010000            je exitCount
   553                                 
   554                                 
   555 000002A0 3D20A10700              cmp eax, BUFFSIZE
   556 000002A5 7C00                    jl reachedEndOfFile
   557                                 
   558 000002A7 EB0D                    jmp notEndOfFile
   559                                 
   560                                  reachedEndOfFile:
   561                                 
   562                                 
   563 000002A9 C60425[00000000]01      mov byte[wasEOF], TRUE
   564 000002B1 890425[00000000]        mov dword[bfMax], eax
   565                                 
   566                                  notEndOfFile:
   567                                 
   568                                 
   569                                 
   570 000002B8 48C70425[00000000]-     mov qword[curr], 0
   571 000002B8 00000000           
   572                                 
   573                                 
   574                                  endMainLp:
   575                                 
   576                                 
   577                                 
   578 000002C4 488B3425[00000000]      mov rsi, qword[curr]
   579 000002CC 8A96[00000000]          mov dl, byte[buff+rsi]
   580 000002D2 881425[00000000]        mov byte[chr], dl
   581                                 
   582                                 
   583                                 
   584                                 
   585 000002D9 833C25[00000000]05      cmp dword[skipLineCount], SKIP_LINES
   586 000002E1 7D1C                    jge skipLineDone
   587                                 
   588 000002E3 803C25[00000000]0A      cmp byte[chr], LF
   589 000002EB 7505                    jne noLineCnt
   590 000002ED FF0425[00000000]        inc dword[skipLineCount]
   591                                  noLineCnt:
   592                                 
   593                                 
   594 000002F4 48FF0425[00000000]      inc qword[curr]
   595                                 
   596 000002FC E94AFFFFFF              jmp mainLp
   597                                 
   598                                  skipLineDone:
   599                                 
   600                                 
   601                                 
   602 00000301 833C25[00000000]06      cmp dword[skipCharCount], SKIP_CHARS
   603 00000309 7F12                    jg skipCharDone
   604                                 
   605                                 
   606                                 
   607 0000030B FF0425[00000000]        inc dword[skipCharCount]
   608                                 
   609                                 
   610 00000312 48FF0425[00000000]      inc qword[curr]
   611                                 
   612                                 
   613 0000031A E92CFFFFFF              jmp mainLp
   614                                 
   615                                  skipCharDone:
   616                                 
   617                                 
   618 0000031F 803C25[00000000]20      cmp byte[chr], 0x20
   619 00000327 750B                    jne skipSpace
   620                                 
   621                                 
   622 00000329 48FF0425[00000000]      inc qword[curr]
   623 00000331 E915FFFFFF              jmp mainLp
   624                                 
   625                                  skipSpace:
   626                                 
   627                                 
   628 00000336 803C25[00000000]01      cmp byte[gotDigit], TRUE
   629 0000033E 7438                    je notFirstDigit
   630                                 
   631                                 
   632 00000340 48C7C000000000          mov rax, 0
   633 00000347 8A0425[00000000]        mov al, byte[chr]
   634 0000034E 2C30                    sub al, "0"
   635 00000350 880425[00000000]        mov byte[fDigit], al
   636                                 
   637                                 
   638 00000357 418344850001            add dword[r13+rax*4], 1
   639                                 
   640 0000035D 48FF0425[00000000]      inc qword[curr]
   641 00000365 48FF0425[00000000]      inc qword[totalCnt]
   642                                 
   643                                 
   644 0000036D C60425[00000000]01      mov byte[gotDigit], TRUE
   645 00000375 E9D1FEFFFF              jmp mainLp
   646                                 
   647                                  notFirstDigit:
   648                                 
   649                                 
   650 0000037A 803C25[00000000]0A      cmp byte[chr], LF
   651 00000382 751E                    jne notNewLine
   652                                 
   653 00000384 C70425[00000000]00-     mov dword[skipCharCount], 0
   654 00000384 000000             
   655                                 
   656                                 
   657 0000038F C60425[00000000]00      mov byte[gotDigit], FALSE
   658                                 
   659 00000397 48FF0425[00000000]      inc qword[curr]
   660 0000039F E9A7FEFFFF              jmp mainLp
   661                                 
   662                                  notNewLine:
   663                                 
   664                                 
   665 000003A4 48FF0425[00000000]      inc qword[curr]
   666 000003AC E99AFEFFFF              jmp mainLp
   667                                 
   668                                  errOnRead:
   669                                 
   670 000003B1 48C7C7[00000000]        mov rdi, errFileRead
   671 000003B8 E8D7000000              call printString
   672 000003BD EBFE                    jmp exitCount
   673                                 
   674                                  exitCount:
   675                                 
   676 000003BF 488B3C25[00000000]      mov rdi, qword[totalCnt]
   677 000003C7 48C7C6[00000000]        mov rsi, num2
   678 000003CE E80EFEFFFF              call int2octal
   679                                 
   680 000003D3 415D                    pop r13
   681 000003D5 415C                    pop r12
   682                                 
   683                                 
   684 000003D7 C3                     ret
   685                                 
   686                                 
   687                                 
   688                                 
   689                                 
   690                                 
   691                                 
   692                                 
   693                                 
   694                                 
   695                                 
   696                                 
   697                                 
   698                                 
   699                                 
   700                                 
   701                                 
   702                                 
   703                                 [global showGraph]
   704                                 showGraph:
   705                                 
   706                                 
   707 000003D8 4154                    push r12
   708 000003DA 4155                    push r13
   709 000003DC 4156                    push r14
   710                                 
   711 000003DE 4989FC                  mov r12, rdi
   712 000003E1 4989F5                  mov r13, rsi
   713 000003E4 4989D6                  mov r14, rdx
   714                                 
   715 000003E7 4C89E7                  mov rdi, r12
   716 000003EA 48C7C6[00000000]        mov rsi, graphHeader
   717 000003F1 E84F000000              call writeString
   718                                 
   719 000003F6 488B3C25[00000000]      mov rdi, qword[totalCnt]
   720 000003FE 48C7C6[00000000]        mov rsi, tStr1
   721 00000405 E8D7FDFFFF              call int2octal
   722                                 
   723 0000040A 4C89E7                  mov rdi, r12
   724 0000040D 48C7C6[00000000]        mov rsi, graphLine1
   725 00000414 E82C000000              call writeString
   726                                 
   727 00000419 C60425[00000000]30      mov byte[index2], "0"
   728 00000421 418B4D00                mov ecx, dword[r13]
   729 00000425 4889CF                  mov rdi, rcx
   730 00000428 48C7C6[00000000]        mov rsi, num2
   731 0000042F E8ADFDFFFF              call int2octal
   732                                 
   733 00000434 4C89E7                  mov rdi, r12
   734 00000437 48C7C6[00000000]        mov rsi, graphLine2
   735 0000043E E802000000              call writeString
   736                                 
   737                                 
   738 00000443 415E                    pop r14
   739 00000445 415D                    pop r13
   740 00000447 415C                    pop r12
   741 00000449 C3                     ret
   742                                 
   743                                 
   744                                 
   745                                 
   746                                 
   747                                 
   748                                 
   749                                 
   750                                 
   751                                 
   752                                 
   753                                 
   754                                 
   755                                 
   756                                 
   757                                 
   758                                 
   759                                 
   760                                 
   761                                 
   762                                 [global writeString]
   763                                 writeString:
   764                                 
   765 0000044A 4154                    push r12
   766 0000044C 4155                    push r13
   767 0000044E 4156                    push r14
   768                                 
   769 00000450 4989FC                  mov r12, rdi
   770 00000453 4989F5                  mov r13, rsi
   771                                 
   772                                 
   773 00000456 49C7C600000000          mov r14, 0
   774                                 
   775                                 
   776                                  countChar:
   777                                 
   778 0000045D 803E00                  cmp byte[rsi], NULL
   779 00000460 7406                    je charCountDone
   780 00000462 49FFC6                  inc r14
   781 00000465 48FFC6                  inc rsi
   782 00000468 EBF1                    jmp countChar
   783                                  charCountDone:
   784                                 
   785                                 
   786 0000046A 48C7C001000000          mov rax, SYS_write
   787 00000471 4C89E7                  mov rdi, r12
   788 00000474 4C89EE                  mov rsi, r13
   789 00000477 4C89F2                  mov rdx, r14
   790 0000047A 0F05                    syscall
   791                                 
   792 0000047C 4883F800                cmp rax, 0
   793 00000480 7C00                    jl errorOnWrite
   794                                 
   795 00000482 EB0C                    jmp endWrite
   796                                 
   797                                  errorOnWrite:
   798                                 
   799 00000484 48C7C7[00000000]        mov rdi, errFileWrite
   800 0000048B E804000000              call printString
   801 00000490 EBFE                    jmp endWrite
   802                                 
   803                                  endWrite:
   804                                 
   805 00000492 415E                    pop r14
   806 00000494 415D                    pop r13
   807 00000496 415C                    pop r12
   808 00000498 C3                     ret
   809                                 
   810                                 
   811                                 
   812                                 
   813                                 
   814                                 
   815                                 
   816                                 
   817                                 
   818                                 
   819                                 
   820                                 
   821                                 
   822                                 
   823                                 
   824                                 
   825                                 
   826                                 
   827                                 
   828                                 
   829                                 
   830                                 [global printString]
   831                                 printString:
   832                                 
   833                                 
   834                                 
   835                                 
   836 00000499 48C7C200000000          mov rdx, 0
   837                                 strCountLoop:
   838 000004A0 803C1700                cmp byte [rdi+rdx], NULL
   839 000004A4 7403                    je strCountLoopDone
   840 000004A6 48FFC2                  inc rdx
   841 000004A9 EBF3                    jmp strCountLoop
   842                                 strCountLoopDone:
   843 000004AB 4883FA00                cmp rdx, 0
   844 000004AF 7411                    je printStringDone
   845                                 
   846                                 
   847                                 
   848                                 
   849 000004B1 48C7C001000000          mov rax, SYS_write
   850 000004B8 4889FE                  mov rsi, rdi
   851 000004BB 48C7C701000000          mov rdi, STDOUT
   852                                 
   853 000004C2 0F05                    syscall
   854                                 
   855                                 
   856                                 
   857                                 
   858                                 printStringDone:
   859 000004C4 C3                      ret
   860                                 
   861                                 
   862                                 
