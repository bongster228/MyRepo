     1                                 %line 1+1 ast11.asm
     2                                 
     3                                 
     4                                 
     5                                 
     6                                 
     7                                 
     8                                 
     9                                 
    10                                 
    11                                 
    12                                 
    13                                 
    14                                 
    15                                 
    16                                 
    17                                 
    18                                 
    19                                 
    20                                 
    21                                 
    22                                 [section .data]
    23                                 
    24                                 
    25                                 
    26                                 
    27                                 LF equ 10
    28                                 NULL equ 0
    29                                 SPACE equ 0x20
    30                                 
    31                                 TRUE equ 1
    32                                 FALSE equ 0
    33                                 
    34                                 EXIT_SUCCESS equ 0
    35                                 EXIT_NOSUCCESS equ 1
    36                                 
    37                                 STDIN equ 0
    38                                 STDOUT equ 1
    39                                 STDERR equ 2
    40                                 
    41                                 SYS_read equ 0
    42                                 SYS_write equ 1
    43                                 SYS_open equ 2
    44                                 SYS_close equ 3
    45                                 SYS_fork equ 57
    46                                 SYS_exit equ 60
    47                                 SYS_creat equ 85
    48                                 SYS_time equ 201
    49                                 
    50                                 O_CREAT equ 0x40
    51                                 O_TRUNC equ 0x200
    52                                 O_APPEND equ 0x400
    53                                 
    54                                 O_RDONLY equ 000000
    55                                 O_WRONLY equ 000001
    56                                 O_RDWR equ 000002
    57                                 
    58                                 S_IRUSR equ 00400
    59                                 S_IWUSR equ 00200
    60                                 S_IXUSR equ 00100
    61                                 
    62                                 
    63                                 
    64                                 
    65 00000000 55736167653A202E2F-    usageMsg db "Usage: ./benford -i <inputFileName> "
    66 00000000 62656E666F7264202D-
    67 00000000 69203C696E70757446-
    68 00000000 696C654E616D653E20 
    69 00000024 2D6F203C6F75747075-     db "-o <outputFileName> -d <T/F>", LF, NULL
    70 00000024 7446696C654E616D65-
    71 00000024 3E202D64203C542F46-
    72 00000024 3E0A00             
    73                                 
    74 00000042 4572726F722C20746F-    errMany db "Error, too many characters on the "
    75 00000042 6F206D616E79206368-
    76 00000042 617261637465727320-
    77 00000042 6F6E2074686520     
    78 00000064 636F6D6D616E64206C-     db "command line.", LF, NULL
    79 00000064 696E652E0A00       
    80                                 
    81 00000073 4572726F722C20746F-    errFew db "Error, too few characters on the "
    82 00000073 6F2066657720636861-
    83 00000073 72616374657273206F-
    84 00000073 6E2074686520       
    85 00000094 636F6D6D616E64206C-     db "command line.", LF, NULL
    86 00000094 696E652E0A00       
    87                                 
    88 000000A3 4572726F722C20696E-    errDSpec db "Error, invalid output display specifier."
    89 000000A3 76616C6964206F7574-
    90 000000A3 70757420646973706C-
    91 000000A3 617920737065636966-
    92 000000A3 6965722E           
    93 000000CB 0A00                    db LF, NULL
    94                                 
    95 000000CD 4572726F722C20696E-    errISpec db "Error, invalid input file specifier."
    96 000000CD 76616C696420696E70-
    97 000000CD 75742066696C652073-
    98 000000CD 70656369666965722E 
    99 000000F1 0A00                    db LF, NULL
   100                                 
   101 000000F3 4572726F722C20696E-    errOSpec db "Error, invalid output file specifier."
   102 000000F3 76616C6964206F7574-
   103 000000F3 7075742066696C6520-
   104 000000F3 737065636966696572-
   105 000000F3 2E                 
   106 00000118 0A00                    db LF, NULL
   107                                 
   108 0000011A 4572726F722C20696E-    errTF db "Error, invalid display option. Must be T or F."
   109 0000011A 76616C696420646973-
   110 0000011A 706C6179206F707469-
   111 0000011A 6F6E2E204D75737420-
   112 0000011A 62652054206F722046-
   113 0000011A 2E                 
   114 00000148 0A00                    db LF, NULL
   115                                 
   116 0000014A 4572726F722C206361-    errOpenIn db "Error, can not open input file."
   117 0000014A 6E206E6F74206F7065-
   118 0000014A 6E20696E7075742066-
   119 0000014A 696C652E           
   120 00000169 0A00                    db LF, NULL
   121                                 
   122 0000016B 4572726F722C206361-    errOpenOut db "Error, can not open output file."
   123 0000016B 6E206E6F74206F7065-
   124 0000016B 6E206F757470757420-
   125 0000016B 66696C652E         
   126 0000018B 0A00                    db LF, NULL
   127                                 
   128 0000018D 0000000000000000       rdFileDescriptor dq 0
   129 00000195 0000000000000000       wrFileDescriptor dq 0
   130                                 
   131                                 
   132                                 
   133                                 
   134                                 BUFFSIZE equ 500000
   135                                 
   136                                 SKIP_LINES equ 5
   137                                 SKIP_CHARS equ 6
   138                                 
   139 0000019D 01                     nextCharIsFirst db TRUE
   140 0000019E 00000000               skipLineCount dd 0
   141 000001A2 00000000               skipCharCount dd 0
   142 000001A6 00                     gotDigit db FALSE
   143 000001A7 00                     fDigit db 0
   144 000001A8 00                     chr db 0
   145                                 
   146                                 
   147 000001A9 20A1070000000000       bfMax dq BUFFSIZE
   148 000001B1 20A1070000000000       curr dq BUFFSIZE
   149                                 
   150 000001B9 00                     wasEOF db FALSE
   151                                 
   152 000001BA 4572726F7220726561-    errFileRead db "Error reading input file."
   153 000001BA 64696E6720696E7075-
   154 000001BA 742066696C652E     
   155 000001D3 50726F6772616D2074-     db "Program terminated."
   156 000001D3 65726D696E61746564-
   157 000001D3 2E                 
   158 000001E6 0A00                    db LF, NULL
   159                                 
   160                                 
   161                                 
   162                                 
   163                                 SCALE1 equ 100
   164                                 SCALE2 equ 1000
   165                                 SCALE3 equ 2500
   166                                 SCALE4 equ 5000
   167                                 
   168 000001E8 64000000               scale dd SCALE1
   169 000001EC 0000000000000000       totalCnt dq 0
   170                                 
   171 000001F4 03000000               weight dd 3
   172                                 
   173 000001F8 4572726F7220777269-    errFileWrite db "Error writting output file."
   174 000001F8 7474696E67206F7574-
   175 000001F8 7075742066696C652E 
   176 00000213 0A00                    db LF, NULL
   177                                 
   178 00000215 0A4353203231382042-    graphHeader db LF, "CS 218 Benfords Law", LF
   179 00000215 656E666F726473204C-
   180 00000215 61770A             
   181 0000022A 546573742052657375-     db "Test Results", LF, LF, NULL
   182 0000022A 6C74730A0A00       
   183                                 
   184 00000239 546F74616C20446174-    graphLine1 db "Total Data Points: "
   185 00000239 6120506F696E74733A-
   186 00000239 20                 
   187 0000024C 202020202020202020-    tStr1 db "                     ", LF, LF, NULL
   188 0000024C 202020202020202020-
   189 0000024C 2020200A0A00       
   190                                 
   191                                 DIGITS_SIZE equ 15
   192                                 STARS_SIZE equ 50
   193                                 
   194 00000264 2020                   graphLine2 db "  "
   195 00000266 78                     index2 db "x"
   196 00000267 2020                    db "  "
   197 00000269 202020202020202020-    num2 db "               "
   198 00000269 202020202020       
   199 00000278 7C                      db "|"
   200 00000279 202020202020202020-    stars2 db "                              "
   201 00000279 202020202020202020-
   202 00000279 202020202020202020-
   203 00000279 202020             
   204 00000297 202020202020202020-     db "                    "
   205 00000297 202020202020202020-
   206 00000297 2020               
   207 000002AB 0A00                    db LF, NULL
   208                                 
   209 000002AD 202020202020202020-    graphLine3 db "                     ---------------------------------------------"
   210 000002AD 202020202020202020-
   211 000002AD 2020202D2D2D2D2D2D-
   212 000002AD 2D2D2D2D2D2D2D2D2D-
   213 000002AD 2D2D2D2D2D2D2D2D2D-
   214 000002AD 2D2D2D2D2D2D2D2D2D-
   215 000002AD 2D2D2D2D2D2D2D2D2D-
   216 000002AD 2D2D2D             
   217 000002EF 0A0A00                  db LF, LF, NULL
   218                                 
   219 000002F2 577269746520446F6E-    writeDone db "Write Done", NULL
   220 000002F2 6500               
   221                                 
   222                                 
   223                                 
   224                                 [section .bss]
   225                                 
   226 00000000 <gap>                  buff resb BUFFSIZE+1
   227                                 
   228                                 
   229                                 
   230                                 
   231                                 [section .text]
   232                                 
   233                                 
   234                                 
   235                                 
   236                                 
   237                                 
   238                                 
   239                                 
   240                                 
   241                                 
   242                                 
   243                                 
   244                                 
   245                                 
   246                                 
   247                                 
   248                                 
   249                                 
   250                                 
   251                                 
   252                                 
   253                                 
   254                                 
   255                                 
   256                                 
   257                                 
   258                                 
   259                                 [global getArguments]
   260                                  getArguments:
   261                                 
   262 00000000 53                      push rbx
   263 00000001 4154                    push r12
   264 00000003 4155                    push r13
   265 00000005 4156                    push r14
   266                                 
   267 00000007 4989F4                  mov r12, rsi
   268 0000000A 4989D5                  mov r13, rdx
   269 0000000D 4989CE                  mov r14, rcx
   270                                 
   271                                 
   272 00000010 4883FF01                cmp rdi, 1
   273 00000014 0F84C6000000            je usage
   274                                 
   275                                 
   276 0000001A 4883FF07                cmp rdi, 7
   277 0000001E 0F8FD4000000            jg many
   278                                 
   279                                 
   280 00000024 4883FF07                cmp rdi, 7
   281 00000028 0F8CE2000000            jl few
   282                                 
   283                                 
   284 0000002E 498B5C2408              mov rbx, qword[r12+8]
   285 00000033 66813B2D69              cmp word[rbx], 0x692d
   286 00000038 0F85EA000000            jne invalidInputSpecifier
   287                                 
   288                                 
   289 0000003E 48C7C002000000          mov rax, SYS_open
   290 00000045 498B7C2410              mov rdi, qword[r12+16]
   291 0000004A 48C7C600000000          mov rsi, O_RDONLY
   292 00000051 0F05                    syscall
   293                                 
   294 00000053 4883F800                cmp rax, 0
   295 00000057 0F8CE3000000            jl errorOnInputFile
   296                                 
   297 0000005D 49894500                mov qword[r13], rax
   298 00000061 48890425[00000000]      mov qword[rdFileDescriptor], rax
   299                                 
   300                                 
   301 00000069 498B5C2418              mov rbx, qword[r12+24]
   302 0000006E 66813B2D6F              cmp word[rbx], 0x6f2d
   303 00000073 0F85DF000000            jne invalidOutputSpecifier
   304                                 
   305                                 
   306 00000079 48C7C055000000          mov rax, SYS_creat
   307 00000080 498B7C2420              mov rdi, qword[r12+32]
   308 00000085 48C7C680010000          mov rsi, S_IRUSR | S_IWUSR
   309 0000008C 0F05                    syscall
   310                                 
   311 0000008E 4883F800                cmp rax, 0
   312 00000092 0F8CD5000000            jl errorOnOutputFile
   313                                 
   314 00000098 498906                  mov qword[r14], rax
   315                                 
   316 0000009B 48C7C002000000          mov rax, SYS_open
   317 000000A2 498B7C2420              mov rdi, qword[r12+32]
   318 000000A7 48C7C600000000          mov rsi, O_RDONLY
   319 000000AE 0F05                    syscall
   320                                 
   321 000000B0 4883F800                cmp rax, 0
   322 000000B4 0F8CB3000000            jl errorOnOutputFile
   323                                 
   324                                 
   325 000000BA 498B5C2428              mov rbx, qword[r12+40]
   326 000000BF 66813B2D64              cmp word[rbx], 0x642d
   327 000000C4 0F85B8000000            jne invalidDisplaySpecifier
   328                                 
   329                                 
   330 000000CA 498B5C2430              mov rbx, qword[r12+48]
   331                                 
   332                                 
   333 000000CF 803B54                  cmp byte[rbx], 0x54
   334 000000D2 0F84BF000000            je displayTrue
   335                                 
   336 000000D8 803B46                  cmp byte[rbx], 0x46
   337 000000DB 0F84D2000000            je displayFalse
   338                                 
   339                                 
   340                                 
   341 000000E1 E9DE000000              jmp invalidDisplayOption
   342                                 
   343                                 
   344                                  usage:
   345 000000E6 48C7C7[00000000]        mov rdi, usageMsg
   346 000000ED E852030000              call printString
   347 000000F2 48C7C000000000          mov rax, FALSE
   348 000000F9 E9DB000000              jmp argsDone
   349                                 
   350                                  many:
   351 000000FE 48C7C7[00000000]        mov rdi, errMany
   352 00000105 E83A030000              call printString
   353 0000010A 48C7C000000000          mov rax, FALSE
   354 00000111 E9C3000000              jmp argsDone
   355                                 
   356                                  few:
   357 00000116 48C7C7[00000000]        mov rdi, errFew
   358 0000011D E822030000              call printString
   359 00000122 48C7C000000000          mov rax, FALSE
   360 00000129 E9AB000000              jmp argsDone
   361                                 
   362                                  invalidInputSpecifier:
   363 0000012E 48C7C7[00000000]        mov rdi, errISpec
   364 00000135 E80A030000              call printString
   365 0000013A 48C7C000000000          mov rax, FALSE
   366 00000141 E993000000              jmp argsDone
   367                                 
   368                                  errorOnInputFile:
   369 00000146 48C7C7[00000000]        mov rdi, errOpenIn
   370 0000014D E8F2020000              call printString
   371 00000152 48C7C000000000          mov rax, FALSE
   372 00000159 E97B000000              jmp argsDone
   373                                 
   374                                  invalidOutputSpecifier:
   375 0000015E 48C7C7[00000000]        mov rdi, errOSpec
   376 00000165 E8DA020000              call printString
   377 0000016A 48C7C000000000          mov rax, FALSE
   378 00000171 EB69                    jmp argsDone
   379                                 
   380                                  errorOnOutputFile:
   381 00000173 48C7C7[00000000]        mov rdi, errOpenOut
   382 0000017A E8C5020000              call printString
   383 0000017F 48C7C000000000          mov rax, FALSE
   384 00000186 EB54                    jmp argsDone
   385                                 
   386                                  invalidDisplaySpecifier:
   387 00000188 48C7C7[00000000]        mov rdi, errDSpec
   388 0000018F E8B0020000              call printString
   389 00000194 48C7C000000000          mov rax, FALSE
   390 0000019B EB3F                    jmp argsDone
   391                                 
   392                                  displayTrue:
   393 0000019D 49C70001000000          mov qword[r8], TRUE
   394 000001A4 48C7C001000000          mov rax, TRUE
   395 000001AB 488B1C25[00000000]      mov rbx, qword[rdFileDescriptor]
   396 000001B3 49895D00                mov qword[r13], rbx
   397 000001B7 EB23                    jmp argsDone
   398                                 
   399                                  displayFalse:
   400 000001B9 49C70000000000          mov qword[r8], FALSE
   401 000001C0 48C7C001000000          mov rax, TRUE
   402 000001C7 EB13                    jmp argsDone
   403                                 
   404                                  invalidDisplayOption:
   405 000001C9 48C7C7[00000000]        mov rdi, errTF
   406 000001D0 E86F020000              call printString
   407 000001D5 48C7C000000000          mov rax, FALSE
   408 000001DC EBFE                    jmp argsDone
   409                                 
   410                                  argsDone:
   411                                 
   412 000001DE 415E                    pop r14
   413 000001E0 415D                    pop r13
   414 000001E2 415C                    pop r12
   415 000001E4 5B                      pop rbx
   416 000001E5 C3                      ret
   417                                 
   418                                 
   419                                 
   420                                 
   421                                 
   422                                 
   423                                 
   424                                 
   425                                 
   426                                 
   427                                 
   428                                 
   429                                 
   430                                 
   431                                 
   432                                 
   433                                 
   434                                 
   435                                 
   436                                 
   437                                 
   438                                 
   439                                 
   440                                 
   441                                 
   442                                 
   443                                 
   444                                 [global int2octal]
   445                                 int2octal:
   446                                 
   447 000001E6 4154                    push r12
   448 000001E8 4155                    push r13
   449                                 
   450 000001EA 49C7C408000000          mov r12, 8
   451 000001F1 48C7C100000000          mov rcx, 0
   452 000001F8 4989F5                  mov r13, rsi
   453                                 
   454                                 
   455 000001FB 4889F8                  mov rax, rdi
   456                                 
   457                                  convertLp:
   458 000001FE 48C7C200000000          mov rdx, 0
   459 00000205 49F7F4                  div r12
   460                                 
   461 00000208 52                      push rdx
   462 00000209 48FFC1                  inc rcx
   463                                 
   464                                 
   465 0000020C 4883F800                cmp rax, 0
   466 00000210 7400                    je cvtPushDone
   467                                 
   468 00000212 EBE8                    jmp convertLp
   469                                 
   470                                  cvtPushDone:
   471                                 
   472                                 
   473 00000214 48C7C200000000          mov rdx, 0
   474                                  popLp:
   475                                 
   476 0000021B 415C                    pop r12
   477 0000021D 48FFC9                  dec rcx
   478 00000220 4983C430                add r12, "0"
   479 00000224 4588641500              mov byte[r13+rdx], r12b
   480                                 
   481 00000229 48FFC2                  inc rdx
   482                                 
   483 0000022C 4883F900                cmp rcx, 0
   484 00000230 7400                    je convertDone
   485 00000232 EBE5                    jmp popLp
   486                                 
   487                                  convertDone:
   488                                 
   489 00000234 41C644150000            mov byte[r13+rdx], NULL
   490 0000023A 48C7C001000000          mov rax, TRUE
   491                                 
   492 00000241 415D                    pop r13
   493 00000243 415C                    pop r12
   494                                 
   495 00000245 C3                     ret
   496                                 
   497                                 
   498                                 
   499                                 
   500                                 
   501                                 
   502                                 
   503                                 
   504                                 
   505                                 
   506                                 
   507                                 
   508                                 
   509                                 
   510                                 
   511                                 
   512                                 
   513                                 
   514                                 
   515                                 
   516                                 
   517                                 
   518                                 [global countDigits]
   519                                 countDigits:
   520                                 
   521 00000246 4154                    push r12
   522 00000248 4155                    push r13
   523                                 
   524 0000024A 4989FC                  mov r12, rdi
   525 0000024D 4989F5                  mov r13, rsi
   526                                 
   527                                  mainLp:
   528                                 
   529 00000250 488B3C25[00000000]      mov rdi, qword[curr]
   530 00000258 488B3425[00000000]      mov rsi, qword[bfMax]
   531                                 
   532 00000260 4839F7                  cmp rdi, rsi
   533 00000263 7C5D                    jl endMainLp
   534                                 
   535 00000265 803C25[00000000]01      cmp byte[wasEOF], TRUE
   536 0000026D 0F8446010000            je exitCount
   537                                 
   538                                 
   539                                 
   540 00000273 48C7C000000000          mov rax, SYS_read
   541 0000027A 4C89E7                  mov rdi, r12
   542 0000027D 48C7C6[00000000]        mov rsi, buff
   543 00000284 48C7C220A10700          mov rdx, BUFFSIZE
   544 0000028B 0F05                    syscall
   545                                 
   546                                 
   547                                 
   548 0000028D 4883F800                cmp rax, 0
   549 00000291 0F8C14010000            jl errOnRead
   550                                 
   551                                 
   552 00000297 83F800                  cmp eax, 0
   553 0000029A 0F8419010000            je exitCount
   554                                 
   555                                 
   556 000002A0 3D20A10700              cmp eax, BUFFSIZE
   557 000002A5 7C00                    jl reachedEndOfFile
   558                                 
   559 000002A7 EB0D                    jmp notEndOfFile
   560                                 
   561                                  reachedEndOfFile:
   562                                 
   563                                 
   564 000002A9 C60425[00000000]01      mov byte[wasEOF], TRUE
   565 000002B1 890425[00000000]        mov dword[bfMax], eax
   566                                 
   567                                  notEndOfFile:
   568                                 
   569                                 
   570                                 
   571 000002B8 48C70425[00000000]-     mov qword[curr], 0
   572 000002B8 00000000           
   573                                 
   574                                 
   575                                  endMainLp:
   576                                 
   577                                 
   578                                 
   579 000002C4 488B3425[00000000]      mov rsi, qword[curr]
   580 000002CC 8A96[00000000]          mov dl, byte[buff+rsi]
   581 000002D2 881425[00000000]        mov byte[chr], dl
   582                                 
   583                                 
   584                                 
   585                                 
   586 000002D9 833C25[00000000]05      cmp dword[skipLineCount], SKIP_LINES
   587 000002E1 7D1C                    jge skipLineDone
   588                                 
   589 000002E3 803C25[00000000]0A      cmp byte[chr], LF
   590 000002EB 7505                    jne noLineCnt
   591 000002ED FF0425[00000000]        inc dword[skipLineCount]
   592                                  noLineCnt:
   593                                 
   594                                 
   595 000002F4 48FF0425[00000000]      inc qword[curr]
   596                                 
   597 000002FC E94AFFFFFF              jmp mainLp
   598                                 
   599                                  skipLineDone:
   600                                 
   601                                 
   602                                 
   603 00000301 833C25[00000000]06      cmp dword[skipCharCount], SKIP_CHARS
   604 00000309 7F12                    jg skipCharDone
   605                                 
   606                                 
   607                                 
   608 0000030B FF0425[00000000]        inc dword[skipCharCount]
   609                                 
   610                                 
   611 00000312 48FF0425[00000000]      inc qword[curr]
   612                                 
   613                                 
   614 0000031A E92CFFFFFF              jmp mainLp
   615                                 
   616                                  skipCharDone:
   617                                 
   618                                 
   619 0000031F 803C25[00000000]20      cmp byte[chr], 0x20
   620 00000327 750B                    jne skipSpace
   621                                 
   622                                 
   623 00000329 48FF0425[00000000]      inc qword[curr]
   624 00000331 E915FFFFFF              jmp mainLp
   625                                 
   626                                  skipSpace:
   627                                 
   628                                 
   629 00000336 803C25[00000000]01      cmp byte[gotDigit], TRUE
   630 0000033E 7438                    je notFirstDigit
   631                                 
   632                                 
   633 00000340 48C7C000000000          mov rax, 0
   634 00000347 8A0425[00000000]        mov al, byte[chr]
   635 0000034E 2C30                    sub al, "0"
   636 00000350 880425[00000000]        mov byte[fDigit], al
   637                                 
   638                                 
   639 00000357 418344850001            add dword[r13+rax*4], 1
   640                                 
   641 0000035D 48FF0425[00000000]      inc qword[curr]
   642 00000365 48FF0425[00000000]      inc qword[totalCnt]
   643                                 
   644                                 
   645 0000036D C60425[00000000]01      mov byte[gotDigit], TRUE
   646 00000375 E9D1FEFFFF              jmp mainLp
   647                                 
   648                                  notFirstDigit:
   649                                 
   650                                 
   651 0000037A 803C25[00000000]0A      cmp byte[chr], LF
   652 00000382 751E                    jne notNewLine
   653                                 
   654 00000384 C70425[00000000]00-     mov dword[skipCharCount], 0
   655 00000384 000000             
   656                                 
   657                                 
   658 0000038F C60425[00000000]00      mov byte[gotDigit], FALSE
   659                                 
   660 00000397 48FF0425[00000000]      inc qword[curr]
   661 0000039F E9A7FEFFFF              jmp mainLp
   662                                 
   663                                  notNewLine:
   664                                 
   665                                 
   666 000003A4 48FF0425[00000000]      inc qword[curr]
   667 000003AC E99AFEFFFF              jmp mainLp
   668                                 
   669                                  errOnRead:
   670                                 
   671 000003B1 48C7C7[00000000]        mov rdi, errFileRead
   672 000003B8 E887000000              call printString
   673 000003BD EBFE                    jmp exitCount
   674                                 
   675                                  exitCount:
   676                                 
   677 000003BF 488B3C25[00000000]      mov rdi, qword[totalCnt]
   678 000003C7 48C7C6[00000000]        mov rsi, num2
   679 000003CE E80EFEFFFF              call int2octal
   680                                 
   681 000003D3 415D                    pop r13
   682 000003D5 415C                    pop r12
   683                                 
   684                                 
   685 000003D7 C3                     ret
   686                                 
   687                                 
   688                                 
   689                                 
   690                                 
   691                                 
   692                                 
   693                                 
   694                                 
   695                                 
   696                                 
   697                                 
   698                                 
   699                                 
   700                                 
   701                                 
   702                                 
   703                                 
   704                                 [global showGraph]
   705                                 showGraph:
   706                                 
   707                                 
   708 000003D8 4154                    push r12
   709 000003DA 4155                    push r13
   710 000003DC 4156                    push r14
   711                                 
   712 000003DE 4989FC                  mov r12, rdi
   713 000003E1 4989F5                  mov r13, rsi
   714 000003E4 4989D6                  mov r14, rdx
   715                                 
   716                                 
   717                                 
   718                                 
   719                                 
   720 000003E7 415E                    pop r14
   721 000003E9 415D                    pop r13
   722 000003EB 415C                    pop r12
   723 000003ED C3                     ret
   724                                 
   725                                 
   726                                 
   727                                 
   728                                 
   729                                 
   730                                 
   731                                 
   732                                 
   733                                 
   734                                 
   735                                 
   736                                 
   737                                 
   738                                 
   739                                 
   740                                 
   741                                 
   742                                 
   743                                 
   744                                 [global writeString]
   745                                 writeString:
   746                                 
   747 000003EE 4154                    push r12
   748 000003F0 4155                    push r13
   749 000003F2 4156                    push r14
   750                                 
   751 000003F4 4989FC                  mov r12, rdi
   752 000003F7 4989F5                  mov r13, rsi
   753                                 
   754                                 
   755 000003FA 49C7C600000000          mov r14, 0
   756                                 
   757                                 
   758                                  countChar:
   759                                 
   760 00000401 803E00                  cmp byte[rsi], NULL
   761 00000404 7406                    je charCountDone
   762 00000406 49FFC6                  inc r14
   763 00000409 48FFC6                  inc rsi
   764 0000040C EBF1                    jmp countChar
   765                                  charCountDone:
   766                                 
   767                                 
   768 0000040E 48C7C001000000          mov rax, SYS_write
   769 00000415 4C89E7                  mov rdi, r12
   770 00000418 4C89EE                  mov rsi, r13
   771 0000041B 4C89F2                  mov rdx, r14
   772 0000041E 0F05                    syscall
   773                                 
   774 00000420 4883F800                cmp rax, 0
   775 00000424 7C0C                    jl errorOnWrite
   776                                 
   777 00000426 48C7C7[00000000]        mov rdi, writeDone
   778 0000042D E812000000              call printString
   779 00000432 EB0C                    jmp endWrite
   780                                 
   781                                  errorOnWrite:
   782                                 
   783 00000434 48C7C7[00000000]        mov rdi, errFileWrite
   784 0000043B E804000000              call printString
   785 00000440 EBFE                    jmp endWrite
   786                                 
   787                                  endWrite:
   788                                 
   789 00000442 415E                    pop r14
   790 00000444 415D                    pop r13
   791 00000446 415C                    pop r12
   792 00000448 C3                     ret
   793                                 
   794                                 
   795                                 
   796                                 
   797                                 
   798                                 
   799                                 
   800                                 
   801                                 
   802                                 
   803                                 
   804                                 
   805                                 
   806                                 
   807                                 
   808                                 
   809                                 
   810                                 
   811                                 
   812                                 
   813                                 
   814                                 [global printString]
   815                                 printString:
   816                                 
   817                                 
   818                                 
   819                                 
   820 00000449 48C7C200000000          mov rdx, 0
   821                                 strCountLoop:
   822 00000450 803C1700                cmp byte [rdi+rdx], NULL
   823 00000454 7403                    je strCountLoopDone
   824 00000456 48FFC2                  inc rdx
   825 00000459 EBF3                    jmp strCountLoop
   826                                 strCountLoopDone:
   827 0000045B 4883FA00                cmp rdx, 0
   828 0000045F 7411                    je printStringDone
   829                                 
   830                                 
   831                                 
   832                                 
   833 00000461 48C7C001000000          mov rax, SYS_write
   834 00000468 4889FE                  mov rsi, rdi
   835 0000046B 48C7C701000000          mov rdi, STDOUT
   836                                 
   837 00000472 0F05                    syscall
   838                                 
   839                                 
   840                                 
   841                                 
   842                                 printStringDone:
   843 00000474 C3                      ret
   844                                 
   845                                 
   846                                 
